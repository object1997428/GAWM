
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

spring.jpa.database=mysql
spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true


spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.data.mongodb.uri=${MONGODB_URI}

spring.jpa.hibernate.use-new-id-generator-mappings=true

spring.jackson.serialization.fail-on-empty-beans=false

# database
spring.profiles.include=db,env
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always

# registration
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=account_email,gender,birthyear
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.registration.google.client-id = ${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret = ${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope = profile, email


# provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Spring log colors
spring.output.ansi.enabled=always

# Port
server.port=9090

